help="Usage: `basename $0` [-h] [-d] -- Compiles images for rides that use one remap color.
	-h		Echos this help text
	-d		Delete images in renderout folder after compiling"

delete=false

# Get command line flags
while getopts ":hd" option; do
	case "$option" in
		h)
			echo "$help"
			exit
			;;
		d)
			delete=true
			;;
		\?)
			printf "illegal option: -%s\n" "$OPTARG" >&2
			echo "$usage" >&2
			exit 1
			;;
	esac
done

echo "Palettizing images..."

convert "renderout/remap*.png" -brightness-contrast -2x-20 +dither -remap "../../../templates/paletteremap.png" "renderout/remap%04d.png"
convert "renderout/img*.png" +dither -remap "../../../templates/palette.png" "renderout/img%04d.png"

echo "Compositing images..."

mkdir "finished" 2>/dev/null



for f in renderout/img*.png ; do 
	g=${f:13:4}
	
	case $g in
		# Icon image
		0000)
			composite "renderout/img$g.png" "renderout/remap$g.png" "finished/pic$g.bmp"
			mogrify -gravity Center -crop 112x112+0+0 +repage -type truecolor "finished/pic$g.bmp"
			echo "0,0" >> finished/pos.txt
			;;
		# Generate 2 Blank images
		0001)
			;&
		0002)
			convert canvas:"#23532b" "finished/pic$g.bmp"
			echo "0,0" >> finished/pos.txt
			;;
		# Actual ride images
		*)
			composite "renderout/img$g.png" "renderout/remap$g.png" "finished/pic$g.bmp"
			canvastex=$(mogrify -trim -print '%X%Y' -type truecolor "finished/pic$g.bmp" -quiet)
			
			canvastex=${canvastex:1}
			IFS=+ read x y <<< "$canvastex"
			posx=$(expr 128 - $x)
			posy=$(expr 128 - $y)
			echo "${posx},${posy}" >> finished/pos.txt
			;;
	esac
	
done

# Cleanup if -d is set

if [ "$delete" = "true" ]; then
	echo "Cleaning up..."

	for f in renderout/img*.png; do 
		rm $f
	done
	for f in renderout/remap*.png; do 
		rm $f
	done
fi


echo "Done"