help="Usage: `basename $0` [options] -- Compiles images for rides
	-h			Echos this help text
	-d			Delete images in renderout folder after compiling
	-r 1|2|3	Enables 1, 2, or 3 re-mappable colors"

delete=false
rem=false

# Get command line flags
while getopts ":hdr:" option; do
	case "$option" in
		h)
			echo "$help"
			exit
			;;
		d)
			delete=true
			;;
		r)
			nrem=$OPTARG
			if [ "$nrem" != '1' ] && [ "$nrem" != '2' ] && [ "$nrem" != '3' ]; then
				echo "Invalid argument for -r" >&2
				echo "$help" >&2
				exit 1
			fi
			rem="true"
 			;;
		\?)
			printf "illegal option: -%s\n" "$OPTARG" >&2
			echo "$help" >&2
			exit 1
			;;
		:)
			echo "Must provide argument for -r" >&2
			echo "$help" >&2
			exit 1
			;;
	esac
done

echo "Palettizing images..."

mkdir "finished" 2>/dev/null

if [ "$rem" == "true" ]; then
	convert "renderout/remap*.png" -brightness-contrast -2x-20 +dither -remap "../../../templates/paletteremap$nrem.png" "renderout/remap%04d.png"
	convert "renderout/img*.png" +dither -remap "../../../templates/paletteforremap$nrem.png" "renderout/img%04d.png"
fi

convert "renderout/img*.png" -dither none -remap "../../../templates/palette.png" "finished/pic%04d.bmp"

echo "Compositing images..."

if [ "$rem" == "true" ]; then
	for f in renderout/img*.png ; do 
		g=${f:13:4}
		
		case $g in
			# Icon image
			0000)
				composite "renderout/img$g.png" "renderout/remap$g.png" "finished/pic$g.bmp"
				mogrify -gravity Center -crop 112x112+0+0 +repage -type truecolor "finished/pic$g.bmp"
				echo "0,0" >> finished/pos.txt
				;;
			# Generate 2 Blank images
			0001)
				;&
			0002)
				convert canvas:"#23532b" "finished/pic$g.bmp"
				echo "0,0" >> finished/pos.txt
				;;
			# Actual ride images
			*)
				composite "renderout/img$g.png" "renderout/remap$g.png" "finished/pic$g.bmp"
				canvastex=$(mogrify -trim -print '%X%Y' -type truecolor "finished/pic$g.bmp" -quiet)
				missed=${canvastex:0:1} # Catch missed (i.e. empty) images
				if [ $missed==- ]; then
					posx=0
					posy=0
				else
					canvastex=${canvastex:1}
					IFS=+ read x y <<< "$canvastex"
					posx=$(expr 128 - $x)
					posy=$(expr 128 - $y)
				fi
				echo "${posx},${posy}" >> finished/pos.txt
				;;
		esac
		
	done
else
	for f in finished/pic*.bmp ; do 
		g=${f:12:4}
		
		case $g in
			# Icon Image
			0000)
				mogrify -gravity Center -crop 112x112+0+0 +repage -type truecolor "finished/pic$g.bmp"
				echo "0,0" >> finished/pos.txt
				;;
			# Generate 2 Blank images
			0001)
				;&
			0002)
				convert canvas:"#23532b" "finished/pic$g.bmp"
				echo "0,0" >> finished/pos.txt
				;;
			# Actual ride images
			*)
				canvastex=$(mogrify -trim -print '%X%Y' -type truecolor "finished/pic$g.bmp" -quiet)
				missed=${canvastex:0:1} # Catch missed (i.e. empty) images
				if [ $missed==- ]; then
					posx=0
					posy=0
				else
					canvastex=${canvastex:1}
					IFS=+ read x y <<< "$canvastex"
					posx=$(expr 128 - $x)
					posy=$(expr 128 - $y)
				fi
				echo "${posx},${posy}" >> finished/pos.txt
				;;
		esac
		
	done
fi
	
# Cleanup if -d is set

if [ "$delete" == "true" ]; then
	echo "Cleaning up..."

	for f in renderout/img*.png; do 
		rm $f
	done
fi


echo "Done"